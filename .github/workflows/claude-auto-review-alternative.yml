# Claude Auto Review - Alternative Solution
# Claude Code GitHub App„Çí‰Ωø„Çè„Å™„ÅÑ‰ª£ÊõøÊ°à

name: Basic PR Review

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]

jobs:
  basic-review:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files_yaml: |
            src:
              - '**/*.ts'
              - '**/*.tsx'
              - '**/*.js'
              - '**/*.jsx'
            docs:
              - '**/*.md'
            config:
              - 'package.json'
              - 'tsconfig.json'
              - '.eslintrc.*'
              - 'next.config.*'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        if: steps.changed-files.outputs.src_any_changed == 'true'
        run: npx tsc --noEmit

      - name: Run ESLint
        if: steps.changed-files.outputs.src_any_changed == 'true'
        run: npx eslint . --ext .ts,.tsx,.js,.jsx --max-warnings 0

      - name: Create Required Labels
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const labels = [
              { name: 'frontend', color: '0052cc', description: 'Frontend code changes' },
              { name: 'backend', color: 'd73a4a', description: 'Backend/API code changes' },
              { name: 'ui', color: 'a2eeef', description: 'UI/styling changes' },
              { name: 'ai', color: '7057ff', description: 'AI functionality changes' },
              { name: 'database', color: 'f9d0c4', description: 'Database related changes' },
              { name: 'documentation', color: '0075ca', description: 'Documentation updates' },
              { name: 'config', color: 'e4e669', description: 'Configuration file changes' },
              { name: 'test', color: 'c2e0c6', description: 'Test related changes' },
              { name: 'dependencies', color: 'b60205', description: 'Dependency updates' },
              { name: 'size/XS', color: '00ff00', description: 'Extra small PR' },
              { name: 'size/S', color: '66ff66', description: 'Small PR' },
              { name: 'size/M', color: 'ffff00', description: 'Medium PR' },
              { name: 'size/L', color: 'ff9900', description: 'Large PR' },
              { name: 'size/XL', color: 'ff0000', description: 'Extra large PR' }
            ];

            for (const label of labels) {
              try {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
                console.log(`Created label: ${label.name}`);
              } catch (error) {
                if (error.status === 422) {
                  console.log(`Label already exists: ${label.name}`);
                } else {
                  console.log(`Error creating label ${label.name}:`, error.message);
                }
              }
            }

      - name: Add PR Labels
        uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          configuration-path: .github/labeler.yml
        continue-on-error: true

      - name: Check PR Size
        uses: CodelyTV/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/XS'
          xs_max_size: 10
          s_label: 'size/S'
          s_max_size: 100
          m_label: 'size/M'
          m_max_size: 500
          l_label: 'size/L'
          l_max_size: 1000
          xl_label: 'size/XL'
          fail_if_xl: false

      - name: PR Comment
        if: steps.changed-files.outputs.src_any_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const changedFiles = `${{ steps.changed-files.outputs.all_changed_files }}`.split(' ');
            
            const comment = `## ü§ñ Automated PR Review

            ### Changes Summary
            - **Files changed**: ${changedFiles.length}
            - **Source files**: ${{ steps.changed-files.outputs.src_any_changed }}
            - **Documentation**: ${{ steps.changed-files.outputs.docs_any_changed }}
            - **Configuration**: ${{ steps.changed-files.outputs.config_any_changed }}

            ### Checks Performed
            - ‚úÖ TypeScript type checking
            - ‚úÖ ESLint code quality
            - ‚úÖ Automatic labeling
            - ‚úÖ PR size classification

            ### Next Steps
            - Review the changes manually
            - Ensure tests pass (if applicable)
            - Check for breaking changes
            - Verify documentation updates

            ---
            *This is an automated review. For detailed AI-powered code review, install [Claude Code GitHub App](https://github.com/apps/claude)*
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });